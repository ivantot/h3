{"version":3,"sources":["components/FinalCountdown.js","App.js","reportWebVitals.js","index.js"],"names":["FinalCountdown","props","playPause","state","counter","setState","running","stop","save","element","time","id","getNewID","times","concat","delete","filter","x","load","adjust","input","formatTime","cc","c","h","Math","floor","m","s","hs","ms","ss","th","tm","ts","f","format","replace","toString","idCounter","this","timer","setInterval","tick","clearInterval","className","onClick","length","map","React","Component","defaultProps","resolution","timeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cc33f21.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./FinalCountdown.css\";\r\n\r\nclass FinalCountdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      counter: 0,\r\n      running: false,\r\n      times: [],\r\n    };\r\n    this.idCounter = 0;\r\n  }\r\n\r\n  getNewID() {\r\n    return this.idCounter++;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.tick();\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  tick() {\r\n    if (!this.state.running) {\r\n      return;\r\n    }\r\n    if (this.state.counter === 0) {\r\n      this.setState((state) => {\r\n        return {\r\n          running: !state.running,\r\n        };\r\n      });\r\n      return;\r\n    }\r\n    this.setState((state) => {\r\n      return {\r\n        counter: state.counter - 1000,\r\n      };\r\n    });\r\n  }\r\n\r\n  playPause = () => {\r\n    if (this.state.counter === 0) {\r\n      return;\r\n    }\r\n    this.setState((state) => {\r\n      return {\r\n        running: !state.running,\r\n      };\r\n    });\r\n  };\r\n\r\n  stop = () => {\r\n    this.setState({\r\n      running: false,\r\n      counter: 0,\r\n    });\r\n  };\r\n\r\n  save = () => {\r\n    if (this.state.counter === 0) {\r\n      return;\r\n    }\r\n    this.setState((state) => {\r\n      let element = {};\r\n      element.time = state.counter;\r\n      element.id = this.getNewID();\r\n\r\n      return {\r\n        times: state.times.concat(element), //spaja dva niza i vraca spojeni niz sto je potrebno za setState\r\n      };\r\n    });\r\n  };\r\n\r\n  delete = (id) => {\r\n    this.setState((state) => {\r\n      return {\r\n        times: state.times.filter((x) => x.id !== id),\r\n      };\r\n    });\r\n  };\r\n\r\n  load = (id) => {\r\n    if (!this.state.running) {\r\n      this.setState((state) => {\r\n        let newTime = state.times.filter((x) => x.id === id);\r\n        return {\r\n          counter: newTime[0].time,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  adjust = (input) => {\r\n    if (input === \"incrementSeconds\" && this.state.counter + 1000 < 360000000) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter + 1000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"incrementSecondsDec\" &&\r\n      this.state.counter + 10000 < 360000000\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter + 10000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"incrementMinutes\" &&\r\n      this.state.counter + 60000 < 360000000\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter + 60000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"incrementMinutesDec\" &&\r\n      this.state.counter + 600000 < 360000000\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter + 600000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"incrementHours\" &&\r\n      this.state.counter + 3600000 < 360000000\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter + 3600000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"incrementHoursDec\" &&\r\n      this.state.counter + 36000000 < 360000000\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter + 36000000,\r\n        };\r\n      });\r\n    } else if (input === \"decrementSeconds\" && this.state.counter - 1000 >= 0) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter - 1000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"decrementSecondsDec\" &&\r\n      this.state.counter - 10000 >= 0\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter - 10000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"decrementMinutes\" &&\r\n      this.state.counter - 60000 >= 0\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter - 60000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"decrementMinutesDec\" &&\r\n      this.state.counter - 600000 >= 0\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter - 600000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"decrementHours\" &&\r\n      this.state.counter - 3600000 >= 0\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter - 3600000,\r\n        };\r\n      });\r\n    } else if (\r\n      input === \"decrementHoursDec\" &&\r\n      this.state.counter - 36000000 >= 0\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          counter: state.counter - 36000000,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  formatTime = (cc) => {\r\n    let c = cc;\r\n    let h = Math.floor(c / (60 * 60 * 1000));\r\n    c = c - 60 * 60 * 1000 * h;\r\n    let m = Math.floor(c / (60 * 1000));\r\n    c = c - 60 * 1000 * m;\r\n    let s = Math.floor(c / 1000);\r\n    let hs = `${h < 10 ? \"0\" : \"\"}${h}`;\r\n    let ms = `${m < 10 ? \"0\" : \"\"}${m}`;\r\n    let ss = `${s < 10 ? \"0\" : \"\"}${s}`;\r\n    let th = Math.floor(cc / (60 * 60 * 1000));\r\n    let tm = Math.floor(cc / (60 * 1000));\r\n    let ts = Math.floor(cc / 1000);\r\n    let f = this.props.format;\r\n    f = f.replace(\"%H\", hs);\r\n    f = f.replace(\"%h\", th.toString());\r\n    f = f.replace(\"%M\", ms);\r\n    f = f.replace(\"%m\", tm.toString());\r\n    f = f.replace(\"%S\", ss);\r\n    f = f.replace(\"%s\", ts.toString());\r\n    // console.log(f);\r\n    return f;\r\n  };\r\n\r\n  render() {\r\n    let f = this.formatTime(this.state.counter);\r\n\r\n    return (\r\n      <div className=\"countdown\">\r\n        <div className=\"buttonIncrementSeconds\">\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"incrementSecondsDec\")}\r\n          >\r\n            ▲\r\n          </button>\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"incrementSeconds\")}\r\n          >\r\n            ▲\r\n          </button>\r\n        </div>\r\n        <div className=\"buttonIncrementMinutes\">\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"incrementMinutesDec\")}\r\n          >\r\n            ▲\r\n          </button>\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"incrementMinutes\")}\r\n          >\r\n            ▲\r\n          </button>\r\n        </div>\r\n        <div className=\"buttonIncrementHours\">\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"incrementHoursDec\")}\r\n          >\r\n            ▲\r\n          </button>\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"incrementHours\")}\r\n          >\r\n            ▲\r\n          </button>\r\n        </div>\r\n        <div className=\"buttonDecrementSeconds\">\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"decrementSecondsDec\")}\r\n          >\r\n            ▼\r\n          </button>\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"decrementSeconds\")}\r\n          >\r\n            ▼\r\n          </button>\r\n        </div>\r\n        <div className=\"buttonDecrementMinutes\">\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"decrementMinutesDec\")}\r\n          >\r\n            ▼\r\n          </button>\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"decrementMinutes\")}\r\n          >\r\n            ▼\r\n          </button>\r\n        </div>\r\n        <div className=\"buttonDecrementHours\">\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"decrementHoursDec\")}\r\n          >\r\n            ▼\r\n          </button>\r\n          <button\r\n            className=\"toggleButton\"\r\n            onClick={() => this.adjust(\"decrementHours\")}\r\n          >\r\n            ▼\r\n          </button>\r\n        </div>\r\n        <div className=\"numberDisplay\">\r\n          <span className=\"displayDigits\">{f}</span>\r\n        </div>\r\n        <div className=\"buttonLeft\">\r\n          <button className=\"controlButton tooltip\" onClick={this.playPause}>\r\n            <span className=\"tooltiptext\">Start / Pause timer</span>\r\n\r\n            {this.state.running ? \"⏸️\" : \"▶️\"}\r\n          </button>\r\n        </div>\r\n        <div className=\"buttonCenter\">\r\n          <button className=\"controlButton tooltip\" onClick={this.save}>\r\n            <span className=\"tooltiptext\">Save current time</span>\r\n            ✏️\r\n          </button>\r\n        </div>\r\n        <div className=\"buttonRight\">\r\n          <button className=\"controlButton tooltip\" onClick={this.stop}>\r\n            <span className=\"tooltiptext\">Stop timer</span>\r\n            ⏹️\r\n          </button>\r\n        </div>\r\n        <div className={this.state.times.length === 0 ? \"\" : \"displayTimes\"}>\r\n          <table>\r\n            {this.state.times.map((x) => {\r\n              return (\r\n                <tr key={x.id}>\r\n                  <td className=\"timeData\">{this.formatTime(x.time)}</td>\r\n                  <td className=\"timeDataControls\">\r\n                    <button onClick={() => this.load(x.id)}>🔄</button>\r\n                    <button onClick={() => this.delete(x.id)}>✂️</button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFinalCountdown.defaultProps = {\r\n  resolution: 10,\r\n  timeout: 0,\r\n  format: \"%H:%M:%S\",\r\n};\r\n\r\nexport default FinalCountdown;\r\n","import \"./App.css\";\nimport FinalCountdown from \"./components/FinalCountdown\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <FinalCountdown />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}